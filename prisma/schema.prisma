generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite" 
  url      = env("DATABASE_URL")
}

model Role {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  users       User[]
}

model User {
  id          Int      @id @default(autoincrement())
  roleId      Int
  firstName   String
  lastName    String
  email       String   @unique
  password    String
  pin         String? 
  phoneNumber String?
  status      String   @default("active")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  role        Role      @relation(fields: [roleId], references: [id])
  sales       Sale[]
  reports     Report[]
}

model Customer {
  id          Int      @id @default(autoincrement())
  name        String
  email       String?
  phoneNumber String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  sales       Sale[]
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  status      String   @default("active")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  products    Product[]
}

model Product {
  id          Int      @id @default(autoincrement())
  sku         String   @unique
  categoryId  Int
  name        String
  description String?
  price       Float
  stockLevel  Int      @default(0)
  taxRate     Float?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  category    Category @relation(fields: [categoryId], references: [id])
  saleItems   SaleItem[]
}

model Sale {
  id          Int       @id @default(autoincrement())
  userId      Int
  customerId  Int?      
  total       Float
  discount    Float?    @default(0)
  tax         Float?    @default(0)
  paymentType String  
  status      String    @default("completed")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  user        User      @relation(fields: [userId], references: [id])
  customer    Customer? @relation(fields: [customerId], references: [id]) 
  items       SaleItem[]
  receipts    Receipt[]
}


model SaleItem {
  id        Int      @id @default(autoincrement())
  saleId    Int
  productId Int
  quantity  Int
  price     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sale      Sale     @relation(fields: [saleId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}

model Receipt {
  id        Int      @id @default(autoincrement())
  saleId    Int
  url       String?  
  method    String  
  createdAt DateTime @default(now())

  sale      Sale     @relation(fields: [saleId], references: [id])
}

model Report {
  id        Int      @id @default(autoincrement())
  userId    Int
  type      String   
  data      Json
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])
}
